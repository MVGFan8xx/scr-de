name: CI + Deploy

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      # Lint (falls kein npm script vorhanden, fallback auf npx eslint .)
      - run: npm run lint || npx eslint .
      # Syntax-Check Hauptentry
      - run: node --check index.js
      # Tests (falls vorhanden)
      - run: npm test --if-present

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -R "${{ secrets.SERVER_HOST }}" 2>/dev/null || true
          ssh-keyscan -t ed25519 -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH (git pull + pm2 reload)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ec2-user
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -Eeuo pipefail
            cd ~/scr-de || git clone https://github.com/MVGFan8xx/scr-de.git ~/scr-de
            cd ~/scr-de
            git fetch origin main --tags --force
            git reset --hard origin/main

            # Version-Datei
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            COMMIT=$(git rev-parse --short HEAD)
            DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)
            echo "{\"version\":\"$VERSION\",\"commit\":\"$COMMIT\",\"date\":\"$DATE\"}" > version.json

            npm ci || npm install
            npm run build || true

            command -v pm2 >/dev/null 2>&1 || sudo npm i -g pm2
            pm2 reload discord-bot || pm2 start index.js --name "discord-bot"
            pm2 save
